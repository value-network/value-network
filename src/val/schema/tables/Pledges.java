/*
 * This file is generated by jOOQ.
 */
package val.schema.tables;


import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import val.schema.Db;
import val.schema.Indexes;
import val.schema.Keys;
import val.schema.tables.records.PledgesRecord;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.5"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Pledges extends TableImpl<PledgesRecord> {

    /**
     * The reference instance of <code>DB.pledges</code>
     */
    public static final Pledges PLEDGES = new Pledges();
    private static final long serialVersionUID = -631891462;
    /**
     * The column <code>DB.pledges.db_id</code>.
     */
    public final TableField<PledgesRecord, Long> DB_ID = createField("db_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");
    /**
     * The column <code>DB.pledges.id</code>.
     */
    public final TableField<PledgesRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");
    /**
     * The column <code>DB.pledges.account_id</code>.
     */
    public final TableField<PledgesRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");
    /**
     * The column <code>DB.pledges.recip_id</code>.
     */
    public final TableField<PledgesRecord, Long> RECIP_ID = createField("recip_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");
    /**
     * The column <code>DB.pledges.pledge_total</code>.
     */
    public final TableField<PledgesRecord, Long> PLEDGE_TOTAL = createField("pledge_total", org.jooq.impl.SQLDataType.BIGINT, this, "");
    /**
     * The column <code>DB.pledges.pledge_latest_time</code>.
     */
    public final TableField<PledgesRecord, Long> PLEDGE_LATEST_TIME = createField("pledge_latest_time", org.jooq.impl.SQLDataType.BIGINT, this, "");
    /**
     * The column <code>DB.pledges.unpledge_total</code>.
     */
    public final TableField<PledgesRecord, Long> UNPLEDGE_TOTAL = createField("unpledge_total", org.jooq.impl.SQLDataType.BIGINT, this, "");
    /**
     * The column <code>DB.pledges.withdraw_time</code>.
     */
    public final TableField<PledgesRecord, Long> WITHDRAW_TIME = createField("withdraw_time", org.jooq.impl.SQLDataType.BIGINT, this, "");
    /**
     * The column <code>DB.pledges.height</code>.
     */
    public final TableField<PledgesRecord, Integer> HEIGHT = createField("height", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>DB.pledges.latest</code>.
     */
    public final TableField<PledgesRecord, Boolean> LATEST = createField("latest", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>DB.pledges</code> table reference
     */
    public Pledges() {
        this(DSL.name("pledges"), null);
    }

    /**
     * Create an aliased <code>DB.pledges</code> table reference
     */
    public Pledges(String alias) {
        this(DSL.name(alias), PLEDGES);
    }

    /**
     * Create an aliased <code>DB.pledges</code> table reference
     */
    public Pledges(Name alias) {
        this(alias, PLEDGES);
    }

    private Pledges(Name alias, Table<PledgesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Pledges(Name alias, Table<PledgesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PledgesRecord> getRecordType() {
        return PledgesRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Db.DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PLEDGES_IDX_RECIPER_HEIGHT, Indexes.PLEDGES_IDX_SENDER_HEIGHT, Indexes.PLEDGES_PRIMARY, Indexes.PLEDGES_UNIQUE_ID_HEIGHT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PledgesRecord, Long> getIdentity() {
        return Keys.IDENTITY_PLEDGES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PledgesRecord> getPrimaryKey() {
        return Keys.KEY_PLEDGES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PledgesRecord>> getKeys() {
        return Arrays.<UniqueKey<PledgesRecord>>asList(Keys.KEY_PLEDGES_PRIMARY, Keys.KEY_PLEDGES_UNIQUE_ID_HEIGHT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Pledges as(String alias) {
        return new Pledges(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Pledges as(Name alias) {
        return new Pledges(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Pledges rename(String name) {
        return new Pledges(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Pledges rename(Name name) {
        return new Pledges(name, null);
    }
}
