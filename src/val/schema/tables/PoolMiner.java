/*
 * This file is generated by jOOQ.
 */
package val.schema.tables;


import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import val.schema.Db;
import val.schema.Indexes;
import val.schema.Keys;
import val.schema.tables.records.PoolMinerRecord;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.5"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class PoolMiner extends TableImpl<PoolMinerRecord> {

    /**
     * The reference instance of <code>DB.pool_miner</code>
     */
    public static final PoolMiner POOL_MINER = new PoolMiner();
    private static final long serialVersionUID = -445801348;
    /**
     * The column <code>DB.pool_miner.db_id</code>.
     */
    public final TableField<PoolMinerRecord, Integer> DB_ID = createField("db_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");
    /**
     * The column <code>DB.pool_miner.account_id</code>. miner account id
     */
    public final TableField<PoolMinerRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "miner account id");
    /**
     * The column <code>DB.pool_miner.pool_id</code>. pool account id
     */
    public final TableField<PoolMinerRecord, Long> POOL_ID = createField("pool_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "pool account id");
    /**
     * The column <code>DB.pool_miner.status</code>. state 0-enable 1- delete
     */
    public final TableField<PoolMinerRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "state 0-enable 1- delete");
    /**
     * The column <code>DB.pool_miner.height</code>.
     */
    public final TableField<PoolMinerRecord, Integer> HEIGHT = createField("height", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");
    /**
     * The column <code>DB.pool_miner.c_time</code>.
     */
    public final TableField<PoolMinerRecord, Long> C_TIME = createField("c_time", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");
    /**
     * The column <code>DB.pool_miner.m_time</code>.
     */
    public final TableField<PoolMinerRecord, Long> M_TIME = createField("m_time", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>DB.pool_miner</code> table reference
     */
    public PoolMiner() {
        this(DSL.name("pool_miner"), null);
    }

    /**
     * Create an aliased <code>DB.pool_miner</code> table reference
     */
    public PoolMiner(String alias) {
        this(DSL.name(alias), POOL_MINER);
    }

    /**
     * Create an aliased <code>DB.pool_miner</code> table reference
     */
    public PoolMiner(Name alias) {
        this(alias, POOL_MINER);
    }

    private PoolMiner(Name alias, Table<PoolMinerRecord> aliased) {
        this(alias, aliased, null);
    }

    private PoolMiner(Name alias, Table<PoolMinerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PoolMinerRecord> getRecordType() {
        return PoolMinerRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Db.DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.POOL_MINER_IDX_POOL_LIST, Indexes.POOL_MINER_IDX_POOL_QUERY, Indexes.POOL_MINER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PoolMinerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_POOL_MINER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PoolMinerRecord> getPrimaryKey() {
        return Keys.KEY_POOL_MINER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PoolMinerRecord>> getKeys() {
        return Arrays.<UniqueKey<PoolMinerRecord>>asList(Keys.KEY_POOL_MINER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PoolMiner as(String alias) {
        return new PoolMiner(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PoolMiner as(Name alias) {
        return new PoolMiner(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PoolMiner rename(String name) {
        return new PoolMiner(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PoolMiner rename(Name name) {
        return new PoolMiner(name, null);
    }
}
